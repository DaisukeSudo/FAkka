<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>

  <akka>
    <hocon>
      <![CDATA[
        akka {
          loggers = ["Akka.Event.DefaultLogger, Akka"]
          log-config-on-start = off
          stdout-loglevel = INFO
          loglevel = ERROR

          actor {
            provider = cluster

            serializers {
              json = "Akka.Serialization.NewtonSoftJsonSerializer"
              bytes = "Akka.Serialization.ByteArraySerializer"
            }

            default-dispatcher {
              throughput = 10
            }

            debug {
              receive = on
              autoreceive = on
              lifecycle = on
              event-stream = on
              unhandled = on
            }
          }

          remote {
            enabled-transports = [
              "akka.remote.dot-netty.tcp",
              "akka.remote.magic.http",
            ]

            dot-netty.tcp {
              port = 8123
              hostname = "127.0.0.1"
            }

            magic.http {
              port = 8124
              hostname = "127.0.0.1"
            }

            log-remote-lifecycle-events = INFO
          }

          cluster {
            seed-nodes = [
              "akka://fakka@127.0.0.1:8123",
              "akka://fakka@127.0.0.1:8124",
            ]

            sharding {
              number-of-shards = 100
              least-shard-allocation-strategy.rebalance-absolute-limit = 20
            }
          }

          persistence {
            journal {
              plugin = "akka.persistence.journal.sqlite"
              auto-start-journals = ["akka.persistence.journal.sqlite"]
            }

            snapshot-store {
              plugin = "akka.persistence.snapshot-store.sqlite"
              auto-start-snapshot-stores = ["akka.persistence.snapshot-store.sqlite"]
            }
          }

          persistence.query.journal.sql {
            class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
            write-plugin = ""
            refresh-interval = 3s
            max-buffer-size = 100
          }
        }
      ]]>
    </hocon>
  </akka>
</configuration>
